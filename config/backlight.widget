#Api2

module("dbus")

Var BacklightSrc, BacklightMax;
Var BacklightTmpl = '<?xml version="1.0" encoding="utf-8"?>
  <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 612">
  <path d="M256 150 L256 362 A106 106 0 0 1 256 150" fill="black"/>
  <circle cx="256" cy="256" r="106" stroke="black" stroke-width="45"
    fill="transparent"/>
  <path class="st1" d="M255 20 V45 M255 465 V490 M90 90 L110 110
    M405 400 L425 425 M20 255 H45 M465 255 H490 M90 422 L110 402
    M425 90 L400 110" stroke-linecap="round" stroke-width="40" stroke="black"/>
  <path d="M20 585 H492" stroke-linecap="round" stroke-width="65"
    stroke="rgb(0,0,255,0.3)"/>
  <path d="M20 585 H@BRIGHTNESS@" stroke-linecap="round" stroke-width="65"
    stroke="blue"/>
  </svg>'

Function BacklightInit() {
  Var base = "/sys/class/backlight";
  Var dirs = ls(base);
  Var i = 0;

  BacklightSrc=''
  while i<ArraySize(dirs) & Backlightsrc='' {
    if testfile(base+"/"+dirs[i]+"/actual_brightness") &
      testfile(base+"/"+dirs[i]+"/max_brightness")
      {
        BacklightSrc = base+"/"+dirs[i]+"/actual_brightness"
        BacklightMax = Val(Read(base+"/"+dirs[i]+"/max_brightness"))
        FileTrigger(BacklightSrc, "backlight", 1000)
        SetBacklight(Val(Read(BacklightSrc))/BacklightMax)
        EmitTriggerr( "backlight")
      }
    i = i + 1
  }
}

Function SetBacklight ( pct )
{
  Var SessionInterface = ["system",
      "org.freedesktop.login1",
      "/org/freedesktop/login1/session/auto",
      "org.freedesktop.login1.Session"];
  If BacklightMax > 0 {
    DBusCall(SessionInterface, "SetBrightness", "(ssu)",
           ["backlight", "intel_backlight",
           BacklightMax * Min(1, Max(0.3, pct ))])
    EmitTrigger("backlight")
  }
}

PopUp("BacklightPopup") {
  style = "backlight_popup"
  image {
    value = "display-brightness"
  }
  scale {
    style = 'volume_scale'
    value = Val(Read(BacklightSrc))/BacklightMax
    trigger = "backlight"
    action[LeftClick] = SetBacklight(GtkEvent("dir"))
  }
}

widget_grid {
  style = "module"
  button {
    style = if(ident(DbusCall) & BacklightSrc!='', "module", "hidden")
    value = Replace(BacklightTmpl, "@BRIGHTNESS@",
      Str(Val(Read(BacklightSrc))/BacklightMax*492))
    action[ScrollUp] = SetBacklight(Val(Read(BacklightSrc))/BacklightMax+0.05)
    action[ScrollDown] = SetBacklight(Val(Read(BacklightSrc))/BacklightMax-0.05)
    action[LeftClick] = PopUp("BacklightPopup")
    action[0] = BacklightInit()
    trigger = "backlight"
  }
}

#CSS

window#BacklightPopup {
  background: rgba(0,0,0,0);
}

grid#backlight_popup {
  border-radius: 10px;
  border: 1px solid @borders;
  margin: 5px;
  padding: 10px;
  background-color: @theme_bg_color;
  -GtkWidget-hexpand: true;
  -GtkWidget-vexpand: false;
  -GtkWidget-direction: right;
}

image#backlight_icon {
  min-height: 12px;
  min-width: 12px;
}

#backlight_scale {
  margin: 5px;
  -GtkWidget-direction: right;
  -GtkWidget-valign: center;
  -GtkWidget-hexpand: true;
}

#backlight_scale progress,
#backlight_scale trough {
  min-height: 10px;
}

define BatChargeStr = Str(10*BatLeft/BatTotal,0)
define BatIcon = "battery-level-" + BatChargeStr + "0" + 
        If($BatState = "Discharging","",
          If(BatChargeStr = "10","","-charging"))

Function BatteryInitScanner() {
  Var base, dir, sub, file, i, j;

  base = "/sys/class/power_supply";
  dir = ls(base);
  i = 0;

  while i<ArraySize(dir) {
    If Mid(dir[i], 1, 3)="BAT" {
      sub = ls(base + "/" + dir[i]);
      j = 0;
      while j<ArraySize(sub) {
        file = base + "/" + dir[i] + "/" + sub[j];
        If mid(sub[j], -5, -1) = "_full"
          Config "file('" + file + "') { BatTotal = Grab(First) }"
        If sub[j] = "charge_now" | sub[j] = "energy_now"
          Config "file('" + file + "') { BatLeft = Grab(First) }"
        If sub[j] = "status"
          Config "File ('" + file + "') { BatState = RegEx(\"^(.*)$\",First) }";
        j = j + 1;
      }
    }
    i = i + 1;
  }
}

Function("BatteryInitScanner2"){
  PipeRead "/usr/bin/env python3 << END
import os
sysdir = '/sys/class/power_supply'
list = os.scandir(sysdir)
batdir=''
for entry in list:
  if(entry.name.startswith('BAT')):
    batdir = os.path.join(sysdir,entry.name)
if(batdir==''):
  exit(1)
list = os.scandir(batdir)
print('scanner {')
for entry in list:
  if(entry.name.endswith('_full')):
    print('file(\"' + os.path.join(batdir,entry.name) +
          '\") { BatTotal = Grab(First) }')
  if(entry.name.endswith('_now') and
          ('charge' in entry.name or 'energy' in entry.name)):
    print('file(\"' + os.path.join(batdir,entry.name) +
          '\") { BatLeft = Grab(First) }')
  if(entry.name == 'status'):
    print('file(\"' + os.path.join(batdir,'status') +
          '\") { BatState = RegEx(\"^(.*)$\",First) }')
print('}')
END"
  SetValue "battery", BatIcon
}

layout {
  style = "module"
  button "battery" {
    action[0] = BatteryInitScanner
    style = If($BatState="","hidden","module")
    tooltip = Str(100*BatLeft/BatTotal,0) + "%"
    value = BatIcon
  }
}
